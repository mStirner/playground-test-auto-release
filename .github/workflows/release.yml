name: Release Workflow

on:
  pull_request:
    branches:
      - main
      - dev
    types:
      - closed

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - run: npm ci
      - run: npm run release

      - name: "Read package.json"
        run: echo "PACKAGE_JSON=$(jq -c . < package.json)" >> $GITHUB_ENV

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          commitMode: true
          configurationJson: |
            {
              "categories": [
                {
                  "title": "## What's Changed since #{{FROM_TAG}}",
                  "labels": []
                }
              ],
              "template": "#{{CHANGELOG}}",
              "pr_template": "- #{{TITLE}}\n",
              "empty_template": "#{{OWNER}}\n#{{REPO}}\n#{{FROM_TAG}}\n#{{TO_TAG}}",
              "max_pull_requests": 1000,
              "max_back_track_time_days": 1000
            }          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set/get branch name
        run: |
            # Extrahiere den Branch-Namen aus dem GITHUB_REF
            export BRANCH_NAME=${GITHUB_REF#refs/heads/}
            echo "Branch Name: $BRANCH_NAME"
            echo "Pre releaes: $BRANCH_NAME === 'dev'" 

      - name: "Create GitHub release"    
        uses: ncipollo/release-action@v1        
        with:
          artifacts: "dist/*"
          tag: "v${{ fromJson(env.PACKAGE_JSON).version }}"
          generateReleaseNotes: false
          #skipIfReleaseExists: true
          allowUpdates: true
          body: ${{steps.build_changelog.outputs.changelog}}
          prerelease: $BRANCH_NAME === "dev"